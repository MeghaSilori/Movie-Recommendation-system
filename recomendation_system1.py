# -*- coding: utf-8 -*-
"""Recomendation_system1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13tEWKvhajUio-fzglq8ae7BO4S4nRX5n

#Recomendation System:
1. Popularity based recommendation engine
2. Content based recommendation engine
3. Collaborative filtering based recommendation engine
"""

import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# from google.colab import drive
# drive.mount('/content/drive')

"""Read CSV"""

df = pd.read_csv('C:/Users/megha/Desktop/movie recomender system/movie_metadata.csv')
print(df.columns)

df.shape 

""" we have movies upto 2016"""
# import matplotlib.pyplot as plt
# df.title_year.value_counts(dropna=False).sort_index().plot(kind='barh',figsize=(15,16))
# plt.show()

""" Recommendation will be based on these features only"""

features = ['director_name','plot_keywords','genres','actor_1_name','actor_2_name','actor_3_name','movie_title']

df = df.loc[:,features]

df['index'] = range(1, len(df) + 1)

df.head(10)

"""Removing NAN values"""

for feature in features:
    df[feature] = df[feature].fillna('') #filling all NaNs with blank string
df['genres'] = df['genres'].str.replace('|', ' ')
df['plot_keywords'] = df['plot_keywords'].str.replace('|', ' ')

"""Removing the null terminating char at the end"""

df['movie_title'] = df['movie_title'].apply(lambda x : x[:-1])

"""Applying combined_features() method over each rows of dataframe and storing string in "combined_features" column"""

def combine_features(row):
    return row['director_name']+" "+row['plot_keywords']+" "+row['genres']+" "+row['actor_1_name']+" "+row['actor_2_name']+" "+row['actor_3_name']
df["combined_features"] = df.apply(combine_features,axis=1)

df.head(10)

"""Creating new CountVectorizer() object
Feeding combined strings(movie contents) to CountVectorizer() object"""

cv = CountVectorizer() 
count_matrix = cv.fit_transform(df["combined_features"])
cos_similarity = cosine_similarity(count_matrix)


"""Using tkinter for GUI."""

from tkinter import * 
def show_data():
    txt.delete(0.0, 'end')
    liked_movie = entry.get()
    movie_index = df[df['movie_title'] == liked_movie]["index"].values[0]

    similar_movies = list(enumerate(cos_similarity[movie_index]))   
    sorted_similar_movies = sorted(similar_movies,key=lambda x:x[1],reverse=True)[1:]

    i=0
    List = [None]*10
    for element in sorted_similar_movies:
        s = df[df['index'] == element[0]]["movie_title"].values[0]
        List[i] = s
        i=i+1
        if i>=5:
            break
    for x in List:
        t='\n'
        txt.insert(0.0, x)
        txt.insert(0.0, t)


root = Tk()

root.geometry("600x300")

l1 = Label(root, text="Enter Movie you've liked ")
l1.grid(row=0, column=0)

entry = Entry(root, width=50)
entry.grid(row=1, column=0)

btn = Button(root, text='Search', bg='purple', fg='white', command=show_data)
btn.grid(row=2)

l2 = Label(root, text="Top Five suggested Movies for You ")
l2.grid(row=3)

txt = Text(root,width=80 ,height=10,wrap=WORD)
txt.grid(row=4, sticky=W)

root.mainloop()
